services:
  logger:
    build: ./logger-stats-service
    container_name: logger
    ports:
      - "8081:8081"
    depends_on:
      - kafka

  aggregator:
    build: ./aggregator-service
    container_name: aggregator
    ports:
      - "8082:8082"
    depends_on:
      - kafka
      - redis

  flusher:
    build: ./flusher-service
    container_name: flusher
    depends_on:
      - redis
      - db

  query:
    build: ./api-query-service
    container_name: query
    ports:
      - "8083:8083"
    depends_on:
      - redis
      - db

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    environment:
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"

  db:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_DB: statsdb
      POSTGRES_USER: statsuser
      POSTGRES_PASSWORD: statspassword
    ports:
      - "5432:5432"
    volumes:
      - ./db/init.sh:/docker-entrypoint-initdb.d/init.sh
      - ./db/schema.sql:/docker-entrypoint-initdb.d/schema.sql
